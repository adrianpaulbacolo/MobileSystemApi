//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W88.WebRef.svcFundTransfer {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="transferOrigin", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public enum transferOrigin : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberSite = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAP = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcFundTransfer.IFundTransfer")]
    public interface IFundTransfer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateTransfer", ReplyAction="http://tempuri.org/IFundTransfer/initiateTransferResponse")]
        W88.WebRef.svcFundTransfer.initiateTransferResponse initiateTransfer(W88.WebRef.svcFundTransfer.initiateTransferRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateTransfer", ReplyAction="http://tempuri.org/IFundTransfer/initiateTransferResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateTransferResponse> initiateTransferAsync(W88.WebRef.svcFundTransfer.initiateTransferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateClaim", ReplyAction="http://tempuri.org/IFundTransfer/initiateClaimResponse")]
        W88.WebRef.svcFundTransfer.initiateClaimResponse initiateClaim(W88.WebRef.svcFundTransfer.initiateClaimRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateClaim", ReplyAction="http://tempuri.org/IFundTransfer/initiateClaimResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateClaimResponse> initiateClaimAsync(W88.WebRef.svcFundTransfer.initiateClaimRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateClaimInternal", ReplyAction="http://tempuri.org/IFundTransfer/initiateClaimInternalResponse")]
        W88.WebRef.svcFundTransfer.initiateClaimInternalResponse initiateClaimInternal(W88.WebRef.svcFundTransfer.initiateClaimInternalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFundTransfer/initiateClaimInternal", ReplyAction="http://tempuri.org/IFundTransfer/initiateClaimInternalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateClaimInternalResponse> initiateClaimInternalAsync(W88.WebRef.svcFundTransfer.initiateClaimInternalRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateTransfer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateTransferRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string transferFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string transferTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string operatorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string memberCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string currencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public decimal transferAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string promoCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public W88.WebRef.svcFundTransfer.transferOrigin transferBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string onBehalf;
        
        public initiateTransferRequest() {
        }
        
        public initiateTransferRequest(string transferFrom, string transferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string sessionToken, decimal transferAmount, string promoCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy, string onBehalf) {
            this.transferFrom = transferFrom;
            this.transferTo = transferTo;
            this.operatorId = operatorId;
            this.siteCode = siteCode;
            this.memberCode = memberCode;
            this.currencyCode = currencyCode;
            this.sessionToken = sessionToken;
            this.transferAmount = transferAmount;
            this.promoCode = promoCode;
            this.transferBy = transferBy;
            this.onBehalf = onBehalf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateTransferResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateTransferResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Xml.Linq.XElement initiateTransferResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string processCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string processText;
        
        public initiateTransferResponse() {
        }
        
        public initiateTransferResponse(System.Xml.Linq.XElement initiateTransferResult, string processCode, string processText) {
            this.initiateTransferResult = initiateTransferResult;
            this.processCode = processCode;
            this.processText = processText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateClaim", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateClaimRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string transferTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string operatorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string memberCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string currencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string claimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public W88.WebRef.svcFundTransfer.transferOrigin transferBy;
        
        public initiateClaimRequest() {
        }
        
        public initiateClaimRequest(string transferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string sessionToken, string claimCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy) {
            this.transferTo = transferTo;
            this.operatorId = operatorId;
            this.siteCode = siteCode;
            this.memberCode = memberCode;
            this.currencyCode = currencyCode;
            this.sessionToken = sessionToken;
            this.claimCode = claimCode;
            this.transferBy = transferBy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateClaimResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateClaimResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Xml.Linq.XElement initiateClaimResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string processCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string processText;
        
        public initiateClaimResponse() {
        }
        
        public initiateClaimResponse(System.Xml.Linq.XElement initiateClaimResult, string processCode, string processText) {
            this.initiateClaimResult = initiateClaimResult;
            this.processCode = processCode;
            this.processText = processText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateClaimInternal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateClaimInternalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strTransferTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string operatorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string memberCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string currencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string claimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public W88.WebRef.svcFundTransfer.transferOrigin transferBy;
        
        public initiateClaimInternalRequest() {
        }
        
        public initiateClaimInternalRequest(string strTransferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string claimCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy) {
            this.strTransferTo = strTransferTo;
            this.operatorId = operatorId;
            this.siteCode = siteCode;
            this.memberCode = memberCode;
            this.currencyCode = currencyCode;
            this.claimCode = claimCode;
            this.transferBy = transferBy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initiateClaimInternalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class initiateClaimInternalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Xml.Linq.XElement initiateClaimInternalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string statusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string statusText;
        
        public initiateClaimInternalResponse() {
        }
        
        public initiateClaimInternalResponse(System.Xml.Linq.XElement initiateClaimInternalResult, string statusCode, string statusText) {
            this.initiateClaimInternalResult = initiateClaimInternalResult;
            this.statusCode = statusCode;
            this.statusText = statusText;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFundTransferChannel : W88.WebRef.svcFundTransfer.IFundTransfer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FundTransferClient : System.ServiceModel.ClientBase<W88.WebRef.svcFundTransfer.IFundTransfer>, W88.WebRef.svcFundTransfer.IFundTransfer {
        
        public FundTransferClient() {
        }
        
        public FundTransferClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FundTransferClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FundTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FundTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcFundTransfer.initiateTransferResponse W88.WebRef.svcFundTransfer.IFundTransfer.initiateTransfer(W88.WebRef.svcFundTransfer.initiateTransferRequest request) {
            return base.Channel.initiateTransfer(request);
        }
        
        public System.Xml.Linq.XElement initiateTransfer(string transferFrom, string transferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string sessionToken, decimal transferAmount, string promoCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy, string onBehalf, out string processCode, out string processText) {
            W88.WebRef.svcFundTransfer.initiateTransferRequest inValue = new W88.WebRef.svcFundTransfer.initiateTransferRequest();
            inValue.transferFrom = transferFrom;
            inValue.transferTo = transferTo;
            inValue.operatorId = operatorId;
            inValue.siteCode = siteCode;
            inValue.memberCode = memberCode;
            inValue.currencyCode = currencyCode;
            inValue.sessionToken = sessionToken;
            inValue.transferAmount = transferAmount;
            inValue.promoCode = promoCode;
            inValue.transferBy = transferBy;
            inValue.onBehalf = onBehalf;
            W88.WebRef.svcFundTransfer.initiateTransferResponse retVal = ((W88.WebRef.svcFundTransfer.IFundTransfer)(this)).initiateTransfer(inValue);
            processCode = retVal.processCode;
            processText = retVal.processText;
            return retVal.initiateTransferResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateTransferResponse> initiateTransferAsync(W88.WebRef.svcFundTransfer.initiateTransferRequest request) {
            return base.Channel.initiateTransferAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcFundTransfer.initiateClaimResponse W88.WebRef.svcFundTransfer.IFundTransfer.initiateClaim(W88.WebRef.svcFundTransfer.initiateClaimRequest request) {
            return base.Channel.initiateClaim(request);
        }
        
        public System.Xml.Linq.XElement initiateClaim(string transferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string sessionToken, string claimCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy, out string processCode, out string processText) {
            W88.WebRef.svcFundTransfer.initiateClaimRequest inValue = new W88.WebRef.svcFundTransfer.initiateClaimRequest();
            inValue.transferTo = transferTo;
            inValue.operatorId = operatorId;
            inValue.siteCode = siteCode;
            inValue.memberCode = memberCode;
            inValue.currencyCode = currencyCode;
            inValue.sessionToken = sessionToken;
            inValue.claimCode = claimCode;
            inValue.transferBy = transferBy;
            W88.WebRef.svcFundTransfer.initiateClaimResponse retVal = ((W88.WebRef.svcFundTransfer.IFundTransfer)(this)).initiateClaim(inValue);
            processCode = retVal.processCode;
            processText = retVal.processText;
            return retVal.initiateClaimResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateClaimResponse> initiateClaimAsync(W88.WebRef.svcFundTransfer.initiateClaimRequest request) {
            return base.Channel.initiateClaimAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcFundTransfer.initiateClaimInternalResponse W88.WebRef.svcFundTransfer.IFundTransfer.initiateClaimInternal(W88.WebRef.svcFundTransfer.initiateClaimInternalRequest request) {
            return base.Channel.initiateClaimInternal(request);
        }
        
        public System.Xml.Linq.XElement initiateClaimInternal(string strTransferTo, string operatorId, string siteCode, string memberCode, string currencyCode, string claimCode, W88.WebRef.svcFundTransfer.transferOrigin transferBy, out string statusCode, out string statusText) {
            W88.WebRef.svcFundTransfer.initiateClaimInternalRequest inValue = new W88.WebRef.svcFundTransfer.initiateClaimInternalRequest();
            inValue.strTransferTo = strTransferTo;
            inValue.operatorId = operatorId;
            inValue.siteCode = siteCode;
            inValue.memberCode = memberCode;
            inValue.currencyCode = currencyCode;
            inValue.claimCode = claimCode;
            inValue.transferBy = transferBy;
            W88.WebRef.svcFundTransfer.initiateClaimInternalResponse retVal = ((W88.WebRef.svcFundTransfer.IFundTransfer)(this)).initiateClaimInternal(inValue);
            statusCode = retVal.statusCode;
            statusText = retVal.statusText;
            return retVal.initiateClaimInternalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcFundTransfer.initiateClaimInternalResponse> initiateClaimInternalAsync(W88.WebRef.svcFundTransfer.initiateClaimInternalRequest request) {
            return base.Channel.initiateClaimInternalAsync(request);
        }
    }
}
