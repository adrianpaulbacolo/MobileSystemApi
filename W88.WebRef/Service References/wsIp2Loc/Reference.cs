//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W88.WebRef.wsIP2Loc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsIP2Loc.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/location", ReplyAction="*")]
        W88.WebRef.wsIP2Loc.locationResponse location(W88.WebRef.wsIP2Loc.locationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/location", ReplyAction="*")]
        System.Threading.Tasks.Task<W88.WebRef.wsIP2Loc.locationResponse> locationAsync(W88.WebRef.wsIP2Loc.locationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class locationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="location", Namespace="http://tempuri.org/", Order=0)]
        public W88.WebRef.wsIP2Loc.locationRequestBody Body;
        
        public locationRequest() {
        }
        
        public locationRequest(W88.WebRef.wsIP2Loc.locationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class locationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string IP;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string country;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string type;
        
        public locationRequestBody() {
        }
        
        public locationRequestBody(string IP, string country, string type) {
            this.IP = IP;
            this.country = country;
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class locationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="locationResponse", Namespace="http://tempuri.org/", Order=0)]
        public W88.WebRef.wsIP2Loc.locationResponseBody Body;
        
        public locationResponse() {
        }
        
        public locationResponse(W88.WebRef.wsIP2Loc.locationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class locationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string country;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string type;
        
        public locationResponseBody() {
        }
        
        public locationResponseBody(string country, string type) {
            this.country = country;
            this.type = type;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : W88.WebRef.wsIP2Loc.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<W88.WebRef.wsIP2Loc.ServiceSoap>, W88.WebRef.wsIP2Loc.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.wsIP2Loc.locationResponse W88.WebRef.wsIP2Loc.ServiceSoap.location(W88.WebRef.wsIP2Loc.locationRequest request) {
            return base.Channel.location(request);
        }
        
        public void location(string IP, ref string country, ref string type) {
            W88.WebRef.wsIP2Loc.locationRequest inValue = new W88.WebRef.wsIP2Loc.locationRequest();
            inValue.Body = new W88.WebRef.wsIP2Loc.locationRequestBody();
            inValue.Body.IP = IP;
            inValue.Body.country = country;
            inValue.Body.type = type;
            W88.WebRef.wsIP2Loc.locationResponse retVal = ((W88.WebRef.wsIP2Loc.ServiceSoap)(this)).location(inValue);
            country = retVal.Body.country;
            type = retVal.Body.type;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<W88.WebRef.wsIP2Loc.locationResponse> W88.WebRef.wsIP2Loc.ServiceSoap.locationAsync(W88.WebRef.wsIP2Loc.locationRequest request) {
            return base.Channel.locationAsync(request);
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.wsIP2Loc.locationResponse> locationAsync(string IP, string country, string type) {
            W88.WebRef.wsIP2Loc.locationRequest inValue = new W88.WebRef.wsIP2Loc.locationRequest();
            inValue.Body = new W88.WebRef.wsIP2Loc.locationRequestBody();
            inValue.Body.IP = IP;
            inValue.Body.country = country;
            inValue.Body.type = type;
            return ((W88.WebRef.wsIP2Loc.ServiceSoap)(this)).locationAsync(inValue);
        }
    }
}
