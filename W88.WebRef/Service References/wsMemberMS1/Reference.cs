//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W88.WebRef.wsMemberMS1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsMemberMS1.memberWSSoap")]
    public interface memberWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberRegistration(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistration", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationAsync(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberRegistrationNew(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationNew", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationNewAsync(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckMemberCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckMemberCode(long operatorId, string memberCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckMemberCode", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckMemberCodeAsync(long operatorId, string memberCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckEmail(long operatorId, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckEmailAsync(long operatorId, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountryInfo(long operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountryInfoAsync(long operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSignin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberSignin(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSignin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberSigninAsync(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProductSignin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProductSignin(long operatorId, string memberCode, string password, string siteURL, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProductSignin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProductSigninAsync(long operatorId, string memberCode, string password, string siteURL, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSigninNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberSigninNew(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSigninNew", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberSigninNewAsync(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationPart2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberRegistrationPart2(long memberId, string firstName, string lastName, System.DateTime dob, int securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationPart2", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberRegistrationPart2Async(long memberId, string firstName, string lastName, System.DateTime dob, int securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberProfileUpdate(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberProfileUpdateAsync(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdateNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberProfileUpdateNew(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdateNew", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberProfileUpdateNewAsync(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdatePartialReg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberProfileUpdatePartialReg(
                    long memberId, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string gender, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string verifyPassword, 
                    string languageCode, 
                    int securityQuestion, 
                    string securityAnswer, 
                    int oddsType, 
                    bool partialReg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProfileUpdatePartialReg", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberProfileUpdatePartialRegAsync(
                    long memberId, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string gender, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string verifyPassword, 
                    string languageCode, 
                    int securityQuestion, 
                    string securityAnswer, 
                    int oddsType, 
                    bool partialReg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberChangePassword(long memberId, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberChangePasswordAsync(long memberId, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSignout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberSignout(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSignout", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberSignoutAsync(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSessionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberSessionID(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSessionID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberSessionIDAsync(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSessionCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberSessionCheck(string sessionId, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSessionCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberSessionCheckAsync(string sessionId, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberInfo(long operatorId, long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberInfoAsync(long operatorId, long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPartialRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberPartialRegistration(long operatorId, string memberCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPartialRegistration", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberPartialRegistrationAsync(long operatorId, string memberCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberForgotPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberForgotPassword(long operatorId, string memberCode, string email, int securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberForgotPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberForgotPasswordAsync(long operatorId, string memberCode, string email, int securityQuestion, string securityAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberForgotPasswordPartial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberForgotPasswordPartial(long operatorId, string memberCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberForgotPasswordPartial", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberForgotPasswordPartialAsync(long operatorId, string memberCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendRAFEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SendRAFEmail(long operatorId, long memberId, string languageCode, string siteURL, string friendName, string friendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendRAFEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SendRAFEmailAsync(long operatorId, long memberId, string languageCode, string siteURL, string friendName, string friendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPromotionRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberPromotionRegistration(long operatorId, long memberId, string subjectCode, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPromotionRegistration", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberPromotionRegistrationAsync(long operatorId, long memberId, string subjectCode, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPromotionRegistrationHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberPromotionRegistrationHistory(long operatorId, long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberPromotionRegistrationHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberPromotionRegistrationHistoryAsync(long operatorId, long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberReferralHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberReferralHistory(long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberReferralHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberReferralHistoryAsync(long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRAFSendCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberRAFSendCount(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRAFSendCount", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberRAFSendCountAsync(string memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendEmailVerificationCode(string memberId, string languageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailVerificationCode", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SendEmailVerificationCodeAsync(string memberId, string languageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendContactVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendContactVerificationCode(string memberId, string languageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendContactVerificationCode", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SendContactVerificationCodeAsync(string memberId, string languageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberSafetyRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberSafetyRating(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberSafetyRating", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberSafetyRatingAsync(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyEmailVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyEmailVerificationCode(string memberId, string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyEmailVerificationCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifyEmailVerificationCodeAsync(string memberId, string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyContactVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyContactVerificationCode(string memberId, string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyContactVerificationCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifyContactVerificationCodeAsync(string memberId, string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberAddVIPProgrammeRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberAddVIPProgrammeRequest(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberAddVIPProgrammeRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberAddVIPProgrammeRequestAsync(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberVIPProgramme", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberVIPProgramme(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberVIPProgramme", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberVIPProgrammeAsync(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSuccessfulDeposits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MemberSuccessfulDeposits(long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberSuccessfulDeposits", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MemberSuccessfulDepositsAsync(long memberId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateStatement(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatementAsync(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_old", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateStatement_old(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_old", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_oldAsync(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_staging", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateStatement_staging(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_staging", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_stagingAsync(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_staging_old", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateStatement_staging_old(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateStatement_staging_old", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_staging_oldAsync(long memberId, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckClaimedRebateCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckClaimedRebateCodes(long memberId, string rebateCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckClaimedRebateCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckClaimedRebateCodesAsync(long memberId, string rebateCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckMobile(long operatorId, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckMobileAsync(long operatorId, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyContactVerificationTSM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyContactVerificationTSM(string memberId, string updatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyContactVerificationTSM", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifyContactVerificationTSMAsync(string memberId, string updatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateSummary(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateSummaryAsync(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateSummary_old", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberRebateSummary_old(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberRebateSummary_old", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateSummary_oldAsync(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClaimRebateOnBehalfOfMember_BO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ClaimRebateOnBehalfOfMember_BO(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClaimRebateOnBehalfOfMember_BO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClaimRebateOnBehalfOfMember_BOAsync(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberInstantRebateClaimNow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberInstantRebateClaimNow(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberInstantRebateClaimNow", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberInstantRebateClaimNowAsync(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberAutoSigninFromApp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberAutoSigninFromApp(long operatorId, string memberCode, string playtechCode, string token, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberAutoSigninFromApp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberAutoSigninFromAppAsync(long operatorId, string memberCode, string playtechCode, string token, string sitURL, string loginIP, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberSlotsNetWinLose", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMemberSlotsNetWinLose(long operatorId, string memberCode, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMemberSlotsNetWinLose", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMemberSlotsNetWinLoseAsync(long operatorId, string memberCode, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMemberSlotRescueClaim", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long AddMemberSlotRescueClaim(long operatorId, string memberCode, string productCode, System.DateTime startDate, System.DateTime endDate, decimal netWinLose, decimal claimableAmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMemberSlotRescueClaim", ReplyAction="*")]
        System.Threading.Tasks.Task<long> AddMemberSlotRescueClaimAsync(long operatorId, string memberCode, string productCode, System.DateTime startDate, System.DateTime endDate, decimal netWinLose, decimal claimableAmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWalletRolloverInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWalletRolloverInfo(long operatorId, string memberCode, long walletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWalletRolloverInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWalletRolloverInfoAsync(long operatorId, string memberCode, long walletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Encrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Encrypt(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Encrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EncryptAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Decrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Decrypt(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Decrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DecryptAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProductSignup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void MemberProductSignup(string memberCode, long operatorId, string signupSiteURL, string walletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberProductSignup", ReplyAction="*")]
        System.Threading.Tasks.Task MemberProductSignupAsync(string memberCode, long operatorId, string signupSiteURL, string walletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBonusCodesForMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBonusCodesForMember(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBonusCodesForMember", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBonusCodesForMemberAsync(long memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationNew_FastReg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MemberRegistrationNew_FastReg(W88.WebRef.wsMemberMS1.FastRegistration pFastRegistrationDetails, bool sendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MemberRegistrationNew_FastReg", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationNew_FastRegAsync(W88.WebRef.wsMemberMS1.FastRegistration pFastRegistrationDetails, bool sendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChatSignin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ChatSignin(long operatorId, string memberCode, string password, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChatSignin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ChatSigninAsync(long operatorId, string memberCode, string password, string loginIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChatGetRiskCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChatGetRiskCategory(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChatGetRiskCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChatGetRiskCategoryAsync(string token);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FastRegistration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long operatorIDField;
        
        private string memberCodeField;
        
        private string passwordField;
        
        private string emailField;
        
        private string mobileField;
        
        private string addressField;
        
        private string cityField;
        
        private string postalField;
        
        private string countryCodeField;
        
        private string currencyCodeField;
        
        private string genderField;
        
        private int oddsTypeField;
        
        private string languageCodeField;
        
        private int affliateIDField;
        
        private string referByField;
        
        private string signupIPField;
        
        private string signupSiteUrlField;
        
        private string deviceIDField;
        
        private bool testAccountField;
        
        private string cardCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long OperatorID {
            get {
                return this.operatorIDField;
            }
            set {
                this.operatorIDField = value;
                this.RaisePropertyChanged("OperatorID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MemberCode {
            get {
                return this.memberCodeField;
            }
            set {
                this.memberCodeField = value;
                this.RaisePropertyChanged("MemberCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
                this.RaisePropertyChanged("Mobile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Postal {
            get {
                return this.postalField;
            }
            set {
                this.postalField = value;
                this.RaisePropertyChanged("Postal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
                this.RaisePropertyChanged("CurrencyCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int OddsType {
            get {
                return this.oddsTypeField;
            }
            set {
                this.oddsTypeField = value;
                this.RaisePropertyChanged("OddsType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string LanguageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
                this.RaisePropertyChanged("LanguageCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int AffliateID {
            get {
                return this.affliateIDField;
            }
            set {
                this.affliateIDField = value;
                this.RaisePropertyChanged("AffliateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ReferBy {
            get {
                return this.referByField;
            }
            set {
                this.referByField = value;
                this.RaisePropertyChanged("ReferBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string SignupIP {
            get {
                return this.signupIPField;
            }
            set {
                this.signupIPField = value;
                this.RaisePropertyChanged("SignupIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string SignupSiteUrl {
            get {
                return this.signupSiteUrlField;
            }
            set {
                this.signupSiteUrlField = value;
                this.RaisePropertyChanged("SignupSiteUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool TestAccount {
            get {
                return this.testAccountField;
            }
            set {
                this.testAccountField = value;
                this.RaisePropertyChanged("TestAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
                this.RaisePropertyChanged("CardCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface memberWSSoapChannel : W88.WebRef.wsMemberMS1.memberWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class memberWSSoapClient : System.ServiceModel.ClientBase<W88.WebRef.wsMemberMS1.memberWSSoap>, W88.WebRef.wsMemberMS1.memberWSSoap {
        
        public memberWSSoapClient() {
        }
        
        public memberWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public memberWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public memberWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public memberWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet MemberRegistration(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob) {
            return base.Channel.MemberRegistration(operatorId, memberCode, password, email, mobile, address, city, postal, countryCode, currencyCode, gender, oddsType, languageCode, affiliateId, referBy, signupIP, signupSiteURL, deviceId, testAccount, firstName, lastName, dob);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationAsync(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob) {
            return base.Channel.MemberRegistrationAsync(operatorId, memberCode, password, email, mobile, address, city, postal, countryCode, currencyCode, gender, oddsType, languageCode, affiliateId, referBy, signupIP, signupSiteURL, deviceId, testAccount, firstName, lastName, dob);
        }
        
        public System.Data.DataSet MemberRegistrationNew(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string cardCode) {
            return base.Channel.MemberRegistrationNew(operatorId, memberCode, password, email, mobile, address, city, postal, countryCode, currencyCode, gender, oddsType, languageCode, affiliateId, referBy, signupIP, signupSiteURL, deviceId, testAccount, firstName, lastName, dob, cardCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationNewAsync(
                    long operatorId, 
                    string memberCode, 
                    string password, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string countryCode, 
                    string currencyCode, 
                    string gender, 
                    int oddsType, 
                    string languageCode, 
                    int affiliateId, 
                    string referBy, 
                    string signupIP, 
                    string signupSiteURL, 
                    string deviceId, 
                    bool testAccount, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string cardCode) {
            return base.Channel.MemberRegistrationNewAsync(operatorId, memberCode, password, email, mobile, address, city, postal, countryCode, currencyCode, gender, oddsType, languageCode, affiliateId, referBy, signupIP, signupSiteURL, deviceId, testAccount, firstName, lastName, dob, cardCode);
        }
        
        public int CheckMemberCode(long operatorId, string memberCode) {
            return base.Channel.CheckMemberCode(operatorId, memberCode);
        }
        
        public System.Threading.Tasks.Task<int> CheckMemberCodeAsync(long operatorId, string memberCode) {
            return base.Channel.CheckMemberCodeAsync(operatorId, memberCode);
        }
        
        public int CheckEmail(long operatorId, string email) {
            return base.Channel.CheckEmail(operatorId, email);
        }
        
        public System.Threading.Tasks.Task<int> CheckEmailAsync(long operatorId, string email) {
            return base.Channel.CheckEmailAsync(operatorId, email);
        }
        
        public System.Data.DataSet GetCountryInfo(long operatorId) {
            return base.Channel.GetCountryInfo(operatorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountryInfoAsync(long operatorId) {
            return base.Channel.GetCountryInfoAsync(operatorId);
        }
        
        public System.Data.DataSet MemberSignin(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberSignin(operatorId, memberCode, password, sitURL, loginIP, deviceId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberSigninAsync(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberSigninAsync(operatorId, memberCode, password, sitURL, loginIP, deviceId);
        }
        
        public System.Data.DataSet ProductSignin(long operatorId, string memberCode, string password, string siteURL, string loginIP) {
            return base.Channel.ProductSignin(operatorId, memberCode, password, siteURL, loginIP);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProductSigninAsync(long operatorId, string memberCode, string password, string siteURL, string loginIP) {
            return base.Channel.ProductSigninAsync(operatorId, memberCode, password, siteURL, loginIP);
        }
        
        public System.Data.DataSet MemberSigninNew(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberSigninNew(operatorId, memberCode, password, sitURL, loginIP, deviceId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberSigninNewAsync(long operatorId, string memberCode, string password, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberSigninNewAsync(operatorId, memberCode, password, sitURL, loginIP, deviceId);
        }
        
        public int MemberRegistrationPart2(long memberId, string firstName, string lastName, System.DateTime dob, int securityQuestion, string securityAnswer) {
            return base.Channel.MemberRegistrationPart2(memberId, firstName, lastName, dob, securityQuestion, securityAnswer);
        }
        
        public System.Threading.Tasks.Task<int> MemberRegistrationPart2Async(long memberId, string firstName, string lastName, System.DateTime dob, int securityQuestion, string securityAnswer) {
            return base.Channel.MemberRegistrationPart2Async(memberId, firstName, lastName, dob, securityQuestion, securityAnswer);
        }
        
        public int MemberProfileUpdate(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType) {
            return base.Channel.MemberProfileUpdate(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType);
        }
        
        public System.Threading.Tasks.Task<int> MemberProfileUpdateAsync(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType) {
            return base.Channel.MemberProfileUpdateAsync(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType);
        }
        
        public System.Data.DataSet MemberProfileUpdateNew(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType) {
            return base.Channel.MemberProfileUpdateNew(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberProfileUpdateNewAsync(long memberId, string email, string mobile, string address, string city, string postal, string gender, string firstName, string lastName, System.DateTime dob, string verifyPassword, string languageCode, int securityQuestion, string securityAnswer, int oddsType) {
            return base.Channel.MemberProfileUpdateNewAsync(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType);
        }
        
        public System.Data.DataSet MemberProfileUpdatePartialReg(
                    long memberId, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string gender, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string verifyPassword, 
                    string languageCode, 
                    int securityQuestion, 
                    string securityAnswer, 
                    int oddsType, 
                    bool partialReg) {
            return base.Channel.MemberProfileUpdatePartialReg(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType, partialReg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberProfileUpdatePartialRegAsync(
                    long memberId, 
                    string email, 
                    string mobile, 
                    string address, 
                    string city, 
                    string postal, 
                    string gender, 
                    string firstName, 
                    string lastName, 
                    System.DateTime dob, 
                    string verifyPassword, 
                    string languageCode, 
                    int securityQuestion, 
                    string securityAnswer, 
                    int oddsType, 
                    bool partialReg) {
            return base.Channel.MemberProfileUpdatePartialRegAsync(memberId, email, mobile, address, city, postal, gender, firstName, lastName, dob, verifyPassword, languageCode, securityQuestion, securityAnswer, oddsType, partialReg);
        }
        
        public int MemberChangePassword(long memberId, string currentPassword, string newPassword) {
            return base.Channel.MemberChangePassword(memberId, currentPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> MemberChangePasswordAsync(long memberId, string currentPassword, string newPassword) {
            return base.Channel.MemberChangePasswordAsync(memberId, currentPassword, newPassword);
        }
        
        public int MemberSignout(string memberId) {
            return base.Channel.MemberSignout(memberId);
        }
        
        public System.Threading.Tasks.Task<int> MemberSignoutAsync(string memberId) {
            return base.Channel.MemberSignoutAsync(memberId);
        }
        
        public System.Data.DataSet MemberSessionID(string memberId) {
            return base.Channel.MemberSessionID(memberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberSessionIDAsync(string memberId) {
            return base.Channel.MemberSessionIDAsync(memberId);
        }
        
        public System.Data.DataSet MemberSessionCheck(string sessionId, string loginIP) {
            return base.Channel.MemberSessionCheck(sessionId, loginIP);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberSessionCheckAsync(string sessionId, string loginIP) {
            return base.Channel.MemberSessionCheckAsync(sessionId, loginIP);
        }
        
        public System.Data.DataSet GetMemberInfo(long operatorId, long memberId) {
            return base.Channel.GetMemberInfo(operatorId, memberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberInfoAsync(long operatorId, long memberId) {
            return base.Channel.GetMemberInfoAsync(operatorId, memberId);
        }
        
        public int MemberPartialRegistration(long operatorId, string memberCode, string email) {
            return base.Channel.MemberPartialRegistration(operatorId, memberCode, email);
        }
        
        public System.Threading.Tasks.Task<int> MemberPartialRegistrationAsync(long operatorId, string memberCode, string email) {
            return base.Channel.MemberPartialRegistrationAsync(operatorId, memberCode, email);
        }
        
        public int MemberForgotPassword(long operatorId, string memberCode, string email, int securityQuestion, string securityAnswer) {
            return base.Channel.MemberForgotPassword(operatorId, memberCode, email, securityQuestion, securityAnswer);
        }
        
        public System.Threading.Tasks.Task<int> MemberForgotPasswordAsync(long operatorId, string memberCode, string email, int securityQuestion, string securityAnswer) {
            return base.Channel.MemberForgotPasswordAsync(operatorId, memberCode, email, securityQuestion, securityAnswer);
        }
        
        public int MemberForgotPasswordPartial(long operatorId, string memberCode, string email) {
            return base.Channel.MemberForgotPasswordPartial(operatorId, memberCode, email);
        }
        
        public System.Threading.Tasks.Task<int> MemberForgotPasswordPartialAsync(long operatorId, string memberCode, string email) {
            return base.Channel.MemberForgotPasswordPartialAsync(operatorId, memberCode, email);
        }
        
        public int SendRAFEmail(long operatorId, long memberId, string languageCode, string siteURL, string friendName, string friendEmail) {
            return base.Channel.SendRAFEmail(operatorId, memberId, languageCode, siteURL, friendName, friendEmail);
        }
        
        public System.Threading.Tasks.Task<int> SendRAFEmailAsync(long operatorId, long memberId, string languageCode, string siteURL, string friendName, string friendEmail) {
            return base.Channel.SendRAFEmailAsync(operatorId, memberId, languageCode, siteURL, friendName, friendEmail);
        }
        
        public int MemberPromotionRegistration(long operatorId, long memberId, string subjectCode, string comment) {
            return base.Channel.MemberPromotionRegistration(operatorId, memberId, subjectCode, comment);
        }
        
        public System.Threading.Tasks.Task<int> MemberPromotionRegistrationAsync(long operatorId, long memberId, string subjectCode, string comment) {
            return base.Channel.MemberPromotionRegistrationAsync(operatorId, memberId, subjectCode, comment);
        }
        
        public System.Data.DataSet MemberPromotionRegistrationHistory(long operatorId, long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberPromotionRegistrationHistory(operatorId, memberId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberPromotionRegistrationHistoryAsync(long operatorId, long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberPromotionRegistrationHistoryAsync(operatorId, memberId, dateFrom, dateTo);
        }
        
        public System.Data.DataSet MemberReferralHistory(long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberReferralHistory(memberId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberReferralHistoryAsync(long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberReferralHistoryAsync(memberId, dateFrom, dateTo);
        }
        
        public int MemberRAFSendCount(string memberId) {
            return base.Channel.MemberRAFSendCount(memberId);
        }
        
        public System.Threading.Tasks.Task<int> MemberRAFSendCountAsync(string memberId) {
            return base.Channel.MemberRAFSendCountAsync(memberId);
        }
        
        public bool SendEmailVerificationCode(string memberId, string languageCode) {
            return base.Channel.SendEmailVerificationCode(memberId, languageCode);
        }
        
        public System.Threading.Tasks.Task<bool> SendEmailVerificationCodeAsync(string memberId, string languageCode) {
            return base.Channel.SendEmailVerificationCodeAsync(memberId, languageCode);
        }
        
        public bool SendContactVerificationCode(string memberId, string languageCode) {
            return base.Channel.SendContactVerificationCode(memberId, languageCode);
        }
        
        public System.Threading.Tasks.Task<bool> SendContactVerificationCodeAsync(string memberId, string languageCode) {
            return base.Channel.SendContactVerificationCodeAsync(memberId, languageCode);
        }
        
        public System.Data.DataSet GetMemberSafetyRating(long memberId) {
            return base.Channel.GetMemberSafetyRating(memberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberSafetyRatingAsync(long memberId) {
            return base.Channel.GetMemberSafetyRatingAsync(memberId);
        }
        
        public System.Data.DataSet VerifyEmailVerificationCode(string memberId, string verificationCode) {
            return base.Channel.VerifyEmailVerificationCode(memberId, verificationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifyEmailVerificationCodeAsync(string memberId, string verificationCode) {
            return base.Channel.VerifyEmailVerificationCodeAsync(memberId, verificationCode);
        }
        
        public System.Data.DataSet VerifyContactVerificationCode(string memberId, string verificationCode) {
            return base.Channel.VerifyContactVerificationCode(memberId, verificationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifyContactVerificationCodeAsync(string memberId, string verificationCode) {
            return base.Channel.VerifyContactVerificationCodeAsync(memberId, verificationCode);
        }
        
        public int MemberAddVIPProgrammeRequest(long memberId) {
            return base.Channel.MemberAddVIPProgrammeRequest(memberId);
        }
        
        public System.Threading.Tasks.Task<int> MemberAddVIPProgrammeRequestAsync(long memberId) {
            return base.Channel.MemberAddVIPProgrammeRequestAsync(memberId);
        }
        
        public System.Data.DataSet GetMemberVIPProgramme(long memberId) {
            return base.Channel.GetMemberVIPProgramme(memberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberVIPProgrammeAsync(long memberId) {
            return base.Channel.GetMemberVIPProgrammeAsync(memberId);
        }
        
        public int MemberSuccessfulDeposits(long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberSuccessfulDeposits(memberId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<int> MemberSuccessfulDepositsAsync(long memberId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MemberSuccessfulDepositsAsync(memberId, dateFrom, dateTo);
        }
        
        public System.Data.DataSet GetMemberRebateStatement(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement(memberId, fromDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatementAsync(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatementAsync(memberId, fromDate);
        }
        
        public System.Data.DataSet GetMemberRebateStatement_old(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_old(memberId, fromDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_oldAsync(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_oldAsync(memberId, fromDate);
        }
        
        public System.Data.DataSet GetMemberRebateStatement_staging(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_staging(memberId, fromDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_stagingAsync(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_stagingAsync(memberId, fromDate);
        }
        
        public System.Data.DataSet GetMemberRebateStatement_staging_old(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_staging_old(memberId, fromDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateStatement_staging_oldAsync(long memberId, System.DateTime fromDate) {
            return base.Channel.GetMemberRebateStatement_staging_oldAsync(memberId, fromDate);
        }
        
        public string CheckClaimedRebateCodes(long memberId, string rebateCodes) {
            return base.Channel.CheckClaimedRebateCodes(memberId, rebateCodes);
        }
        
        public System.Threading.Tasks.Task<string> CheckClaimedRebateCodesAsync(long memberId, string rebateCodes) {
            return base.Channel.CheckClaimedRebateCodesAsync(memberId, rebateCodes);
        }
        
        public int CheckMobile(long operatorId, string mobile) {
            return base.Channel.CheckMobile(operatorId, mobile);
        }
        
        public System.Threading.Tasks.Task<int> CheckMobileAsync(long operatorId, string mobile) {
            return base.Channel.CheckMobileAsync(operatorId, mobile);
        }
        
        public System.Data.DataSet VerifyContactVerificationTSM(string memberId, string updatedBy) {
            return base.Channel.VerifyContactVerificationTSM(memberId, updatedBy);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifyContactVerificationTSMAsync(string memberId, string updatedBy) {
            return base.Channel.VerifyContactVerificationTSMAsync(memberId, updatedBy);
        }
        
        public System.Data.DataSet GetMemberRebateSummary(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow) {
            return base.Channel.GetMemberRebateSummary(memberId, fromDate, subProductCode, isClaimNow);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateSummaryAsync(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow) {
            return base.Channel.GetMemberRebateSummaryAsync(memberId, fromDate, subProductCode, isClaimNow);
        }
        
        public System.Data.DataSet GetMemberRebateSummary_old(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow) {
            return base.Channel.GetMemberRebateSummary_old(memberId, fromDate, subProductCode, isClaimNow);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberRebateSummary_oldAsync(long memberId, System.DateTime fromDate, string subProductCode, bool isClaimNow) {
            return base.Channel.GetMemberRebateSummary_oldAsync(memberId, fromDate, subProductCode, isClaimNow);
        }
        
        public System.Data.DataSet ClaimRebateOnBehalfOfMember_BO(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim) {
            return base.Channel.ClaimRebateOnBehalfOfMember_BO(memberId, fromDate, subProductCode, requestedClaim);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClaimRebateOnBehalfOfMember_BOAsync(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim) {
            return base.Channel.ClaimRebateOnBehalfOfMember_BOAsync(memberId, fromDate, subProductCode, requestedClaim);
        }
        
        public System.Data.DataSet MemberInstantRebateClaimNow(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim) {
            return base.Channel.MemberInstantRebateClaimNow(memberId, fromDate, subProductCode, requestedClaim);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberInstantRebateClaimNowAsync(long memberId, System.DateTime fromDate, string subProductCode, decimal requestedClaim) {
            return base.Channel.MemberInstantRebateClaimNowAsync(memberId, fromDate, subProductCode, requestedClaim);
        }
        
        public System.Data.DataSet MemberAutoSigninFromApp(long operatorId, string memberCode, string playtechCode, string token, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberAutoSigninFromApp(operatorId, memberCode, playtechCode, token, sitURL, loginIP, deviceId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberAutoSigninFromAppAsync(long operatorId, string memberCode, string playtechCode, string token, string sitURL, string loginIP, string deviceId) {
            return base.Channel.MemberAutoSigninFromAppAsync(operatorId, memberCode, playtechCode, token, sitURL, loginIP, deviceId);
        }
        
        public System.Data.DataSet GetMemberSlotsNetWinLose(long operatorId, string memberCode, System.DateTime startDate) {
            return base.Channel.GetMemberSlotsNetWinLose(operatorId, memberCode, startDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMemberSlotsNetWinLoseAsync(long operatorId, string memberCode, System.DateTime startDate) {
            return base.Channel.GetMemberSlotsNetWinLoseAsync(operatorId, memberCode, startDate);
        }
        
        public long AddMemberSlotRescueClaim(long operatorId, string memberCode, string productCode, System.DateTime startDate, System.DateTime endDate, decimal netWinLose, decimal claimableAmt) {
            return base.Channel.AddMemberSlotRescueClaim(operatorId, memberCode, productCode, startDate, endDate, netWinLose, claimableAmt);
        }
        
        public System.Threading.Tasks.Task<long> AddMemberSlotRescueClaimAsync(long operatorId, string memberCode, string productCode, System.DateTime startDate, System.DateTime endDate, decimal netWinLose, decimal claimableAmt) {
            return base.Channel.AddMemberSlotRescueClaimAsync(operatorId, memberCode, productCode, startDate, endDate, netWinLose, claimableAmt);
        }
        
        public System.Data.DataSet GetWalletRolloverInfo(long operatorId, string memberCode, long walletId) {
            return base.Channel.GetWalletRolloverInfo(operatorId, memberCode, walletId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWalletRolloverInfoAsync(long operatorId, string memberCode, long walletId) {
            return base.Channel.GetWalletRolloverInfoAsync(operatorId, memberCode, walletId);
        }
        
        public string Encrypt(string value) {
            return base.Channel.Encrypt(value);
        }
        
        public System.Threading.Tasks.Task<string> EncryptAsync(string value) {
            return base.Channel.EncryptAsync(value);
        }
        
        public string Decrypt(string value) {
            return base.Channel.Decrypt(value);
        }
        
        public System.Threading.Tasks.Task<string> DecryptAsync(string value) {
            return base.Channel.DecryptAsync(value);
        }
        
        public void MemberProductSignup(string memberCode, long operatorId, string signupSiteURL, string walletId) {
            base.Channel.MemberProductSignup(memberCode, operatorId, signupSiteURL, walletId);
        }
        
        public System.Threading.Tasks.Task MemberProductSignupAsync(string memberCode, long operatorId, string signupSiteURL, string walletId) {
            return base.Channel.MemberProductSignupAsync(memberCode, operatorId, signupSiteURL, walletId);
        }
        
        public System.Data.DataSet GetBonusCodesForMember(long memberId) {
            return base.Channel.GetBonusCodesForMember(memberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBonusCodesForMemberAsync(long memberId) {
            return base.Channel.GetBonusCodesForMemberAsync(memberId);
        }
        
        public System.Data.DataSet MemberRegistrationNew_FastReg(W88.WebRef.wsMemberMS1.FastRegistration pFastRegistrationDetails, bool sendEmail) {
            return base.Channel.MemberRegistrationNew_FastReg(pFastRegistrationDetails, sendEmail);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MemberRegistrationNew_FastRegAsync(W88.WebRef.wsMemberMS1.FastRegistration pFastRegistrationDetails, bool sendEmail) {
            return base.Channel.MemberRegistrationNew_FastRegAsync(pFastRegistrationDetails, sendEmail);
        }
        
        public System.Data.DataSet ChatSignin(long operatorId, string memberCode, string password, string loginIP) {
            return base.Channel.ChatSignin(operatorId, memberCode, password, loginIP);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ChatSigninAsync(long operatorId, string memberCode, string password, string loginIP) {
            return base.Channel.ChatSigninAsync(operatorId, memberCode, password, loginIP);
        }
        
        public string ChatGetRiskCategory(string token) {
            return base.Channel.ChatGetRiskCategory(token);
        }
        
        public System.Threading.Tasks.Task<string> ChatGetRiskCategoryAsync(string token) {
            return base.Channel.ChatGetRiskCategoryAsync(token);
        }
    }
}
