//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W88.WebRef.svcPayWithdrawal {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WithdrawalSource", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public enum WithdrawalSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberSite = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Affiliate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAP = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Help2PayWithdrawalCallbackResponse", Namespace="http://schemas.datacontract.org/2004/07/Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Help2PayWithdrawalCallbackResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionDatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberCode {
            get {
                return this.MemberCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberCodeField, value) != true)) {
                    this.MemberCodeField = value;
                    this.RaisePropertyChanged("MemberCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantCode {
            get {
                return this.MerchantCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantCodeField, value) != true)) {
                    this.MerchantCodeField = value;
                    this.RaisePropertyChanged("MerchantCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionDatetime {
            get {
                return this.TransactionDatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDatetimeField, value) != true)) {
                    this.TransactionDatetimeField = value;
                    this.RaisePropertyChanged("TransactionDatetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcPayWithdrawal.IWithdrawal")]
    public interface IWithdrawal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createTransactionResponse")]
        void createTransaction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createTransactionResponse")]
        System.Threading.Tasks.Task createTransactionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionResponse")]
        System.Xml.Linq.XElement createBankTransferTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string bankAddress, string bankBranch, string bankCode, string bankName, string bankNameNative, string memberIC, string memberMobile, bool mobileNotify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string bankAddress, string bankBranch, string bankCode, string bankName, string bankNameNative, string memberIC, string memberMobile, bool mobileNotify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionV1Response")]
        System.Xml.Linq.XElement createBankTransferTransactionV1(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    string bankAddress, 
                    string bankBranch, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionV1Response")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionV1Async(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    string bankAddress, 
                    string bankBranch, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransactionV2", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionV2Response")]
        System.Xml.Linq.XElement createBankTransferTransactionV2(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    System.Nullable<long> bankLocationId, 
                    long bankBranchId, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createBankTransferTransactionV2", ReplyAction="http://tempuri.org/IWithdrawal/createBankTransferTransactionV2Response")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionV2Async(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    System.Nullable<long> bankLocationId, 
                    long bankBranchId, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/SMSWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/SMSWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.SMSWithdrawalResponse SMSWithdrawal(W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/SMSWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/SMSWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.SMSWithdrawalResponse> SMSWithdrawalAsync(W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createWingMoneyTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createWingMoneyTransactionResponse")]
        System.Xml.Linq.XElement createWingMoneyTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createWingMoneyTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createWingMoneyTransactionResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createWingMoneyTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createWingMoneyTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createWingMoneyTransactionV1Response")]
        System.Xml.Linq.XElement createWingMoneyTransactionV1(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createWingMoneyTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createWingMoneyTransactionV1Response")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createWingMoneyTransactionV1Async(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createMoneyTransferWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/createMoneyTransferWithdrawalResponse")]
        System.Xml.Linq.XElement createMoneyTransferWithdrawal(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createMoneyTransferWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/createMoneyTransferWithdrawalResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createMoneyTransferWithdrawalAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createPayPalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createPayPalTransactionResponse")]
        System.Xml.Linq.XElement createPayPalTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string accountName, string accountEmail, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createPayPalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createPayPalTransactionResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createPayPalTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string accountName, string accountEmail, string memberMobile, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionResponse")]
        System.Xml.Linq.XElement createOnlineWithdrawalTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createOnlineWithdrawalTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionV1Response")]
        System.Xml.Linq.XElement createOnlineWithdrawalTransactionV1(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string vendorMemberAccount, string vendorMemberPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionV1", ReplyAction="http://tempuri.org/IWithdrawal/createOnlineWithdrawalTransactionV1Response")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createOnlineWithdrawalTransactionV1Async(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string vendorMemberAccount, string vendorMemberPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processNetellerWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processNetellerWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalResponse processNetellerWithdrawal(W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processNetellerWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processNetellerWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalResponse> processNetellerWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalResponse")]
        int processAlogatewayWithdrawal(long invId, string vendorMemberAccount, string vendorMemberPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> processAlogatewayWithdrawalAsync(long invId, string vendorMemberAccount, string vendorMemberPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalV1", ReplyAction="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalV1Response")]
        W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Response processAlogatewayWithdrawalV1(W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalV1", ReplyAction="http://tempuri.org/IWithdrawal/processAlogatewayWithdrawalV1Response")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Response> processAlogatewayWithdrawalV1Async(W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateAlogatewayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateAlogatewayWithdrawalResponse")]
        int validateAlogatewayWithdrawal(string ip, string transactionId, string merchantAccount, string merchantOrder, string amount, string currency, string customerName, string bankCode, string status, string message, string control);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateAlogatewayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateAlogatewayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> validateAlogatewayWithdrawalAsync(string ip, string transactionId, string merchantAccount, string merchantOrder, string amount, string currency, string customerName, string bankCode, string status, string message, string control);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processSDPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processSDPayWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalResponse processSDPayWithdrawal(W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processSDPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processSDPayWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalResponse> processSDPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateSDPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateSDPayWithdrawalResponse")]
        int validateSDPayWithdrawal(string ip, string hiddenField1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateSDPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateSDPayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> validateSDPayWithdrawalAsync(string ip, string hiddenField1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateCleaverWithdraw", ReplyAction="http://tempuri.org/IWithdrawal/validateCleaverWithdrawResponse")]
        int validateCleaverWithdraw(string ip, string transactionId, string bankAccountNo, string bankReference, string bankCode, string bankTransferDate, string transferredAmount, string feeAmount, string username, string signHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateCleaverWithdraw", ReplyAction="http://tempuri.org/IWithdrawal/validateCleaverWithdrawResponse")]
        System.Threading.Tasks.Task<int> validateCleaverWithdrawAsync(string ip, string transactionId, string bankAccountNo, string bankReference, string bankCode, string bankTransferDate, string transferredAmount, string feeAmount, string username, string signHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/addCleaverStatusLog", ReplyAction="http://tempuri.org/IWithdrawal/addCleaverStatusLogResponse")]
        int addCleaverStatusLog(string ip, string transactionId, string statusOfTransaction, string action, string username, string signHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/addCleaverStatusLog", ReplyAction="http://tempuri.org/IWithdrawal/addCleaverStatusLogResponse")]
        System.Threading.Tasks.Task<int> addCleaverStatusLogAsync(string ip, string transactionId, string statusOfTransaction, string action, string username, string signHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processIBanqWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processIBanqWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalResponse processIBanqWithdrawal(W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processIBanqWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processIBanqWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalResponse> processIBanqWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processPay24KWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processPay24KWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalResponse processPay24KWithdrawal(W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processPay24KWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processPay24KWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalResponse> processPay24KWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validatePay24KTransaction", ReplyAction="http://tempuri.org/IWithdrawal/validatePay24KTransactionResponse")]
        int validatePay24KTransaction(string ip, string transactionId, string Pay24KOrderNum, string accountNumber, string accountName, string amount, string currencyCode, string orderStatus, string totalFee, string commission, string charges);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validatePay24KTransaction", ReplyAction="http://tempuri.org/IWithdrawal/validatePay24KTransactionResponse")]
        System.Threading.Tasks.Task<int> validatePay24KTransactionAsync(string ip, string transactionId, string Pay24KOrderNum, string accountNumber, string accountName, string amount, string currencyCode, string orderStatus, string totalFee, string commission, string charges);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createCreditCardTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createCreditCardTransactionResponse")]
        System.Xml.Linq.XElement createCreditCardTransaction(long operatorId, long memberId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string cardName, string cardNo, string cardType, string cardExpiryMonth, string cardExpiryYear, string cardSecurityCode, string issuingBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/createCreditCardTransaction", ReplyAction="http://tempuri.org/IWithdrawal/createCreditCardTransactionResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> createCreditCardTransactionAsync(long operatorId, long memberId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string cardName, string cardNo, string cardType, string cardExpiryMonth, string cardExpiryYear, string cardSecurityCode, string issuingBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processDaddyPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processDaddyPayWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalResponse processDaddyPayWithdrawal(W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processDaddyPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processDaddyPayWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalResponse> processDaddyPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/infoConfirmDaddyPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/infoConfirmDaddyPayWithdrawalResponse")]
        int infoConfirmDaddyPayWithdrawal(string companyOrderNum, string mownecumOrderNum, string amount, string cardNum, string cardName, string companyUser, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/infoConfirmDaddyPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/infoConfirmDaddyPayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> infoConfirmDaddyPayWithdrawalAsync(string companyOrderNum, string mownecumOrderNum, string amount, string cardNum, string cardName, string companyUser, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateDaddyPayWithdrawalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/validateDaddyPayWithdrawalTransactionResponse")]
        int validateDaddyPayWithdrawalTransaction(string ip, string mownecumOrderNum, string companyOrderNum, string status, string amount, string detail, string key, string exactTransactionCharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateDaddyPayWithdrawalTransaction", ReplyAction="http://tempuri.org/IWithdrawal/validateDaddyPayWithdrawalTransactionResponse")]
        System.Threading.Tasks.Task<int> validateDaddyPayWithdrawalTransactionAsync(string ip, string mownecumOrderNum, string companyOrderNum, string status, string amount, string detail, string key, string exactTransactionCharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processQijiPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processQijiPayWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalResponse processQijiPayWithdrawal(W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processQijiPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processQijiPayWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalResponse> processQijiPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateQijiPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateQijiPayWithdrawalResponse")]
        int validateQijiPayWithdrawal(string ip, string businessNum, long invId, string userName, decimal money, string sign, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateQijiPayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateQijiPayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> validateQijiPayWithdrawalAsync(string ip, string businessNum, long invId, string userName, decimal money, string sign, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processHelp2PayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processHelp2PayWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalResponse processHelp2PayWithdrawal(W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processHelp2PayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processHelp2PayWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalResponse> processHelp2PayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateHelp2PayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateHelp2PayWithdrawalResponse")]
        int validateHelp2PayWithdrawal(string ip, W88.WebRef.svcPayWithdrawal.Help2PayWithdrawalCallbackResponse help2payResponse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/validateHelp2PayWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/validateHelp2PayWithdrawalResponse")]
        System.Threading.Tasks.Task<int> validateHelp2PayWithdrawalAsync(string ip, W88.WebRef.svcPayWithdrawal.Help2PayWithdrawalCallbackResponse help2payResponse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processBaoKimWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processBaoKimWithdrawalResponse")]
        W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalResponse processBaoKimWithdrawal(W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/processBaoKimWithdrawal", ReplyAction="http://tempuri.org/IWithdrawal/processBaoKimWithdrawalResponse")]
        System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalResponse> processBaoKimWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/getWithdrawalWireTransaction", ReplyAction="http://tempuri.org/IWithdrawal/getWithdrawalWireTransactionResponse")]
        System.Data.DataTable getWithdrawalWireTransaction(long invId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWithdrawal/getWithdrawalWireTransaction", ReplyAction="http://tempuri.org/IWithdrawal/getWithdrawalWireTransactionResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getWithdrawalWireTransactionAsync(long invId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SMSWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SMSWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long operatorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string memberCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public decimal amount;
        
        public SMSWithdrawalRequest() {
        }
        
        public SMSWithdrawalRequest(long operatorId, string memberCode, decimal amount) {
            this.operatorId = operatorId;
            this.memberCode = memberCode;
            this.amount = amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SMSWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SMSWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SMSWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string languageCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long transId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string operatorCode;
        
        public SMSWithdrawalResponse() {
        }
        
        public SMSWithdrawalResponse(bool SMSWithdrawalResult, string languageCode, string errorCode, long transId, string operatorCode) {
            this.SMSWithdrawalResult = SMSWithdrawalResult;
            this.languageCode = languageCode;
            this.errorCode = errorCode;
            this.transId = transId;
            this.operatorCode = operatorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processNetellerWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processNetellerWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string accountId;
        
        public processNetellerWithdrawalRequest() {
        }
        
        public processNetellerWithdrawalRequest(long invId, string accountId) {
            this.invId = invId;
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processNetellerWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processNetellerWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processNetellerWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal merchantFee;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string merchantTransId;
        
        public processNetellerWithdrawalResponse() {
        }
        
        public processNetellerWithdrawalResponse(int processNetellerWithdrawalResult, string errorCode, string errorMessage, decimal merchantFee, string merchantTransId) {
            this.processNetellerWithdrawalResult = processNetellerWithdrawalResult;
            this.errorCode = errorCode;
            this.errorMessage = errorMessage;
            this.merchantFee = merchantFee;
            this.merchantTransId = merchantTransId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processAlogatewayWithdrawalV1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processAlogatewayWithdrawalV1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        public processAlogatewayWithdrawalV1Request() {
        }
        
        public processAlogatewayWithdrawalV1Request(long invId) {
            this.invId = invId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processAlogatewayWithdrawalV1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processAlogatewayWithdrawalV1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processAlogatewayWithdrawalV1Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public processAlogatewayWithdrawalV1Response() {
        }
        
        public processAlogatewayWithdrawalV1Response(int processAlogatewayWithdrawalV1Result, string errorMessage) {
            this.processAlogatewayWithdrawalV1Result = processAlogatewayWithdrawalV1Result;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processSDPayWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processSDPayWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        public processSDPayWithdrawalRequest() {
        }
        
        public processSDPayWithdrawalRequest(long invId) {
            this.invId = invId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processSDPayWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processSDPayWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processSDPayWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public processSDPayWithdrawalResponse() {
        }
        
        public processSDPayWithdrawalResponse(int processSDPayWithdrawalResult, string errorMessage) {
            this.processSDPayWithdrawalResult = processSDPayWithdrawalResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processIBanqWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processIBanqWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string memberId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accountId;
        
        public processIBanqWithdrawalRequest() {
        }
        
        public processIBanqWithdrawalRequest(long invId, string memberId, string accountId) {
            this.invId = invId;
            this.memberId = memberId;
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processIBanqWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processIBanqWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processIBanqWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string merchantTransId;
        
        public processIBanqWithdrawalResponse() {
        }
        
        public processIBanqWithdrawalResponse(int processIBanqWithdrawalResult, string errorCode, string errorMessage, string merchantTransId) {
            this.processIBanqWithdrawalResult = processIBanqWithdrawalResult;
            this.errorCode = errorCode;
            this.errorMessage = errorMessage;
            this.merchantTransId = merchantTransId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processPay24KWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processPay24KWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        public processPay24KWithdrawalRequest() {
        }
        
        public processPay24KWithdrawalRequest(long invId) {
            this.invId = invId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processPay24KWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processPay24KWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processPay24KWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        public processPay24KWithdrawalResponse() {
        }
        
        public processPay24KWithdrawalResponse(int processPay24KWithdrawalResult, string errorCode) {
            this.processPay24KWithdrawalResult = processPay24KWithdrawalResult;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processDaddyPayWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processDaddyPayWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string memberId;
        
        public processDaddyPayWithdrawalRequest() {
        }
        
        public processDaddyPayWithdrawalRequest(long invId, string memberId) {
            this.invId = invId;
            this.memberId = memberId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processDaddyPayWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processDaddyPayWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processDaddyPayWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        public processDaddyPayWithdrawalResponse() {
        }
        
        public processDaddyPayWithdrawalResponse(int processDaddyPayWithdrawalResult, string errorCode) {
            this.processDaddyPayWithdrawalResult = processDaddyPayWithdrawalResult;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processQijiPayWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processQijiPayWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        public processQijiPayWithdrawalRequest() {
        }
        
        public processQijiPayWithdrawalRequest(long invId) {
            this.invId = invId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processQijiPayWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processQijiPayWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processQijiPayWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        public processQijiPayWithdrawalResponse() {
        }
        
        public processQijiPayWithdrawalResponse(int processQijiPayWithdrawalResult, string errorCode) {
            this.processQijiPayWithdrawalResult = processQijiPayWithdrawalResult;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processHelp2PayWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processHelp2PayWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long operatorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long invId;
        
        public processHelp2PayWithdrawalRequest() {
        }
        
        public processHelp2PayWithdrawalRequest(long operatorId, long invId) {
            this.operatorId = operatorId;
            this.invId = invId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processHelp2PayWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processHelp2PayWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processHelp2PayWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public processHelp2PayWithdrawalResponse() {
        }
        
        public processHelp2PayWithdrawalResponse(int processHelp2PayWithdrawalResult, string errorCode, string errorMessage) {
            this.processHelp2PayWithdrawalResult = processHelp2PayWithdrawalResult;
            this.errorCode = errorCode;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processBaoKimWithdrawal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processBaoKimWithdrawalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long invId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string email;
        
        public processBaoKimWithdrawalRequest() {
        }
        
        public processBaoKimWithdrawalRequest(long invId, string email) {
            this.invId = invId;
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processBaoKimWithdrawalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class processBaoKimWithdrawalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int processBaoKimWithdrawalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal merchantFee;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string merchantTransId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string errorCode;
        
        public processBaoKimWithdrawalResponse() {
        }
        
        public processBaoKimWithdrawalResponse(int processBaoKimWithdrawalResult, decimal merchantFee, string merchantTransId, string errorCode) {
            this.processBaoKimWithdrawalResult = processBaoKimWithdrawalResult;
            this.merchantFee = merchantFee;
            this.merchantTransId = merchantTransId;
            this.errorCode = errorCode;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWithdrawalChannel : W88.WebRef.svcPayWithdrawal.IWithdrawal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WithdrawalClient : System.ServiceModel.ClientBase<W88.WebRef.svcPayWithdrawal.IWithdrawal>, W88.WebRef.svcPayWithdrawal.IWithdrawal {
        
        public WithdrawalClient() {
        }
        
        public WithdrawalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WithdrawalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WithdrawalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WithdrawalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void createTransaction() {
            base.Channel.createTransaction();
        }
        
        public System.Threading.Tasks.Task createTransactionAsync() {
            return base.Channel.createTransactionAsync();
        }
        
        public System.Xml.Linq.XElement createBankTransferTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string bankAddress, string bankBranch, string bankCode, string bankName, string bankNameNative, string memberIC, string memberMobile, bool mobileNotify) {
            return base.Channel.createBankTransferTransaction(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankAddress, bankBranch, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string bankAddress, string bankBranch, string bankCode, string bankName, string bankNameNative, string memberIC, string memberMobile, bool mobileNotify) {
            return base.Channel.createBankTransferTransactionAsync(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankAddress, bankBranch, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify);
        }
        
        public System.Xml.Linq.XElement createBankTransferTransactionV1(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    string bankAddress, 
                    string bankBranch, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source) {
            return base.Channel.createBankTransferTransactionV1(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankAddress, bankBranch, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify, source);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionV1Async(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    string bankAddress, 
                    string bankBranch, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source) {
            return base.Channel.createBankTransferTransactionV1Async(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankAddress, bankBranch, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify, source);
        }
        
        public System.Xml.Linq.XElement createBankTransferTransactionV2(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    System.Nullable<long> bankLocationId, 
                    long bankBranchId, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source) {
            return base.Channel.createBankTransferTransactionV2(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankLocationId, bankBranchId, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify, source);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createBankTransferTransactionV2Async(
                    long operatorId, 
                    string memberCode, 
                    long payMethodId, 
                    string requestCurrency, 
                    decimal requestAmount, 
                    string bankAccountName, 
                    string bankAccountNumber, 
                    System.Nullable<long> bankLocationId, 
                    long bankBranchId, 
                    string bankCode, 
                    string bankName, 
                    string bankNameNative, 
                    string memberIC, 
                    string memberMobile, 
                    bool mobileNotify, 
                    string source) {
            return base.Channel.createBankTransferTransactionV2Async(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, bankLocationId, bankBranchId, bankCode, bankName, bankNameNative, memberIC, memberMobile, mobileNotify, source);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.SMSWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.SMSWithdrawal(W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest request) {
            return base.Channel.SMSWithdrawal(request);
        }
        
        public bool SMSWithdrawal(long operatorId, string memberCode, decimal amount, out string languageCode, out string errorCode, out long transId, out string operatorCode) {
            W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest();
            inValue.operatorId = operatorId;
            inValue.memberCode = memberCode;
            inValue.amount = amount;
            W88.WebRef.svcPayWithdrawal.SMSWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).SMSWithdrawal(inValue);
            languageCode = retVal.languageCode;
            errorCode = retVal.errorCode;
            transId = retVal.transId;
            operatorCode = retVal.operatorCode;
            return retVal.SMSWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.SMSWithdrawalResponse> SMSWithdrawalAsync(W88.WebRef.svcPayWithdrawal.SMSWithdrawalRequest request) {
            return base.Channel.SMSWithdrawalAsync(request);
        }
        
        public System.Xml.Linq.XElement createWingMoneyTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile) {
            return base.Channel.createWingMoneyTransaction(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createWingMoneyTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile) {
            return base.Channel.createWingMoneyTransactionAsync(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile);
        }
        
        public System.Xml.Linq.XElement createWingMoneyTransactionV1(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source) {
            return base.Channel.createWingMoneyTransactionV1(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile, source);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createWingMoneyTransactionV1Async(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source) {
            return base.Channel.createWingMoneyTransactionV1Async(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile, source);
        }
        
        public System.Xml.Linq.XElement createMoneyTransferWithdrawal(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source) {
            return base.Channel.createMoneyTransferWithdrawal(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile, source);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createMoneyTransferWithdrawalAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string bankAccountName, string bankAccountNumber, string memberMobile, string source) {
            return base.Channel.createMoneyTransferWithdrawalAsync(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, bankAccountName, bankAccountNumber, memberMobile, source);
        }
        
        public System.Xml.Linq.XElement createPayPalTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string accountName, string accountEmail, string memberMobile, string source) {
            return base.Channel.createPayPalTransaction(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, accountName, accountEmail, memberMobile, source);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createPayPalTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, string accountName, string accountEmail, string memberMobile, string source) {
            return base.Channel.createPayPalTransactionAsync(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, accountName, accountEmail, memberMobile, source);
        }
        
        public System.Xml.Linq.XElement createOnlineWithdrawalTransaction(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, long accountId) {
            return base.Channel.createOnlineWithdrawalTransaction(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, accountId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createOnlineWithdrawalTransactionAsync(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, long accountId) {
            return base.Channel.createOnlineWithdrawalTransactionAsync(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, accountId);
        }
        
        public System.Xml.Linq.XElement createOnlineWithdrawalTransactionV1(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string vendorMemberAccount, string vendorMemberPin) {
            return base.Channel.createOnlineWithdrawalTransactionV1(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, source, vendorMemberAccount, vendorMemberPin);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createOnlineWithdrawalTransactionV1Async(long operatorId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string vendorMemberAccount, string vendorMemberPin) {
            return base.Channel.createOnlineWithdrawalTransactionV1Async(operatorId, memberCode, payMethodId, requestCurrency, requestAmount, source, vendorMemberAccount, vendorMemberPin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processNetellerWithdrawal(W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest request) {
            return base.Channel.processNetellerWithdrawal(request);
        }
        
        public int processNetellerWithdrawal(long invId, string accountId, out string errorCode, out string errorMessage, out decimal merchantFee, out string merchantTransId) {
            W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest();
            inValue.invId = invId;
            inValue.accountId = accountId;
            W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processNetellerWithdrawal(inValue);
            errorCode = retVal.errorCode;
            errorMessage = retVal.errorMessage;
            merchantFee = retVal.merchantFee;
            merchantTransId = retVal.merchantTransId;
            return retVal.processNetellerWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalResponse> processNetellerWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processNetellerWithdrawalRequest request) {
            return base.Channel.processNetellerWithdrawalAsync(request);
        }
        
        public int processAlogatewayWithdrawal(long invId, string vendorMemberAccount, string vendorMemberPin) {
            return base.Channel.processAlogatewayWithdrawal(invId, vendorMemberAccount, vendorMemberPin);
        }
        
        public System.Threading.Tasks.Task<int> processAlogatewayWithdrawalAsync(long invId, string vendorMemberAccount, string vendorMemberPin) {
            return base.Channel.processAlogatewayWithdrawalAsync(invId, vendorMemberAccount, vendorMemberPin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Response W88.WebRef.svcPayWithdrawal.IWithdrawal.processAlogatewayWithdrawalV1(W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request request) {
            return base.Channel.processAlogatewayWithdrawalV1(request);
        }
        
        public int processAlogatewayWithdrawalV1(long invId, out string errorMessage) {
            W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request inValue = new W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request();
            inValue.invId = invId;
            W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Response retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processAlogatewayWithdrawalV1(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.processAlogatewayWithdrawalV1Result;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Response> processAlogatewayWithdrawalV1Async(W88.WebRef.svcPayWithdrawal.processAlogatewayWithdrawalV1Request request) {
            return base.Channel.processAlogatewayWithdrawalV1Async(request);
        }
        
        public int validateAlogatewayWithdrawal(string ip, string transactionId, string merchantAccount, string merchantOrder, string amount, string currency, string customerName, string bankCode, string status, string message, string control) {
            return base.Channel.validateAlogatewayWithdrawal(ip, transactionId, merchantAccount, merchantOrder, amount, currency, customerName, bankCode, status, message, control);
        }
        
        public System.Threading.Tasks.Task<int> validateAlogatewayWithdrawalAsync(string ip, string transactionId, string merchantAccount, string merchantOrder, string amount, string currency, string customerName, string bankCode, string status, string message, string control) {
            return base.Channel.validateAlogatewayWithdrawalAsync(ip, transactionId, merchantAccount, merchantOrder, amount, currency, customerName, bankCode, status, message, control);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processSDPayWithdrawal(W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest request) {
            return base.Channel.processSDPayWithdrawal(request);
        }
        
        public int processSDPayWithdrawal(long invId, out string errorMessage) {
            W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest();
            inValue.invId = invId;
            W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processSDPayWithdrawal(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.processSDPayWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalResponse> processSDPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processSDPayWithdrawalRequest request) {
            return base.Channel.processSDPayWithdrawalAsync(request);
        }
        
        public int validateSDPayWithdrawal(string ip, string hiddenField1) {
            return base.Channel.validateSDPayWithdrawal(ip, hiddenField1);
        }
        
        public System.Threading.Tasks.Task<int> validateSDPayWithdrawalAsync(string ip, string hiddenField1) {
            return base.Channel.validateSDPayWithdrawalAsync(ip, hiddenField1);
        }
        
        public int validateCleaverWithdraw(string ip, string transactionId, string bankAccountNo, string bankReference, string bankCode, string bankTransferDate, string transferredAmount, string feeAmount, string username, string signHash) {
            return base.Channel.validateCleaverWithdraw(ip, transactionId, bankAccountNo, bankReference, bankCode, bankTransferDate, transferredAmount, feeAmount, username, signHash);
        }
        
        public System.Threading.Tasks.Task<int> validateCleaverWithdrawAsync(string ip, string transactionId, string bankAccountNo, string bankReference, string bankCode, string bankTransferDate, string transferredAmount, string feeAmount, string username, string signHash) {
            return base.Channel.validateCleaverWithdrawAsync(ip, transactionId, bankAccountNo, bankReference, bankCode, bankTransferDate, transferredAmount, feeAmount, username, signHash);
        }
        
        public int addCleaverStatusLog(string ip, string transactionId, string statusOfTransaction, string action, string username, string signHash) {
            return base.Channel.addCleaverStatusLog(ip, transactionId, statusOfTransaction, action, username, signHash);
        }
        
        public System.Threading.Tasks.Task<int> addCleaverStatusLogAsync(string ip, string transactionId, string statusOfTransaction, string action, string username, string signHash) {
            return base.Channel.addCleaverStatusLogAsync(ip, transactionId, statusOfTransaction, action, username, signHash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processIBanqWithdrawal(W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest request) {
            return base.Channel.processIBanqWithdrawal(request);
        }
        
        public int processIBanqWithdrawal(long invId, string memberId, string accountId, out string errorCode, out string errorMessage, out string merchantTransId) {
            W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest();
            inValue.invId = invId;
            inValue.memberId = memberId;
            inValue.accountId = accountId;
            W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processIBanqWithdrawal(inValue);
            errorCode = retVal.errorCode;
            errorMessage = retVal.errorMessage;
            merchantTransId = retVal.merchantTransId;
            return retVal.processIBanqWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalResponse> processIBanqWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processIBanqWithdrawalRequest request) {
            return base.Channel.processIBanqWithdrawalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processPay24KWithdrawal(W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest request) {
            return base.Channel.processPay24KWithdrawal(request);
        }
        
        public int processPay24KWithdrawal(long invId, out string errorCode) {
            W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest();
            inValue.invId = invId;
            W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processPay24KWithdrawal(inValue);
            errorCode = retVal.errorCode;
            return retVal.processPay24KWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalResponse> processPay24KWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processPay24KWithdrawalRequest request) {
            return base.Channel.processPay24KWithdrawalAsync(request);
        }
        
        public int validatePay24KTransaction(string ip, string transactionId, string Pay24KOrderNum, string accountNumber, string accountName, string amount, string currencyCode, string orderStatus, string totalFee, string commission, string charges) {
            return base.Channel.validatePay24KTransaction(ip, transactionId, Pay24KOrderNum, accountNumber, accountName, amount, currencyCode, orderStatus, totalFee, commission, charges);
        }
        
        public System.Threading.Tasks.Task<int> validatePay24KTransactionAsync(string ip, string transactionId, string Pay24KOrderNum, string accountNumber, string accountName, string amount, string currencyCode, string orderStatus, string totalFee, string commission, string charges) {
            return base.Channel.validatePay24KTransactionAsync(ip, transactionId, Pay24KOrderNum, accountNumber, accountName, amount, currencyCode, orderStatus, totalFee, commission, charges);
        }
        
        public System.Xml.Linq.XElement createCreditCardTransaction(long operatorId, long memberId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string cardName, string cardNo, string cardType, string cardExpiryMonth, string cardExpiryYear, string cardSecurityCode, string issuingBank) {
            return base.Channel.createCreditCardTransaction(operatorId, memberId, memberCode, payMethodId, requestCurrency, requestAmount, source, cardName, cardNo, cardType, cardExpiryMonth, cardExpiryYear, cardSecurityCode, issuingBank);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> createCreditCardTransactionAsync(long operatorId, long memberId, string memberCode, long payMethodId, string requestCurrency, decimal requestAmount, W88.WebRef.svcPayWithdrawal.WithdrawalSource source, string cardName, string cardNo, string cardType, string cardExpiryMonth, string cardExpiryYear, string cardSecurityCode, string issuingBank) {
            return base.Channel.createCreditCardTransactionAsync(operatorId, memberId, memberCode, payMethodId, requestCurrency, requestAmount, source, cardName, cardNo, cardType, cardExpiryMonth, cardExpiryYear, cardSecurityCode, issuingBank);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processDaddyPayWithdrawal(W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest request) {
            return base.Channel.processDaddyPayWithdrawal(request);
        }
        
        public int processDaddyPayWithdrawal(long invId, string memberId, out string errorCode) {
            W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest();
            inValue.invId = invId;
            inValue.memberId = memberId;
            W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processDaddyPayWithdrawal(inValue);
            errorCode = retVal.errorCode;
            return retVal.processDaddyPayWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalResponse> processDaddyPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processDaddyPayWithdrawalRequest request) {
            return base.Channel.processDaddyPayWithdrawalAsync(request);
        }
        
        public int infoConfirmDaddyPayWithdrawal(string companyOrderNum, string mownecumOrderNum, string amount, string cardNum, string cardName, string companyUser, string key) {
            return base.Channel.infoConfirmDaddyPayWithdrawal(companyOrderNum, mownecumOrderNum, amount, cardNum, cardName, companyUser, key);
        }
        
        public System.Threading.Tasks.Task<int> infoConfirmDaddyPayWithdrawalAsync(string companyOrderNum, string mownecumOrderNum, string amount, string cardNum, string cardName, string companyUser, string key) {
            return base.Channel.infoConfirmDaddyPayWithdrawalAsync(companyOrderNum, mownecumOrderNum, amount, cardNum, cardName, companyUser, key);
        }
        
        public int validateDaddyPayWithdrawalTransaction(string ip, string mownecumOrderNum, string companyOrderNum, string status, string amount, string detail, string key, string exactTransactionCharge) {
            return base.Channel.validateDaddyPayWithdrawalTransaction(ip, mownecumOrderNum, companyOrderNum, status, amount, detail, key, exactTransactionCharge);
        }
        
        public System.Threading.Tasks.Task<int> validateDaddyPayWithdrawalTransactionAsync(string ip, string mownecumOrderNum, string companyOrderNum, string status, string amount, string detail, string key, string exactTransactionCharge) {
            return base.Channel.validateDaddyPayWithdrawalTransactionAsync(ip, mownecumOrderNum, companyOrderNum, status, amount, detail, key, exactTransactionCharge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processQijiPayWithdrawal(W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest request) {
            return base.Channel.processQijiPayWithdrawal(request);
        }
        
        public int processQijiPayWithdrawal(long invId, out string errorCode) {
            W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest();
            inValue.invId = invId;
            W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processQijiPayWithdrawal(inValue);
            errorCode = retVal.errorCode;
            return retVal.processQijiPayWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalResponse> processQijiPayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processQijiPayWithdrawalRequest request) {
            return base.Channel.processQijiPayWithdrawalAsync(request);
        }
        
        public int validateQijiPayWithdrawal(string ip, string businessNum, long invId, string userName, decimal money, string sign, string status) {
            return base.Channel.validateQijiPayWithdrawal(ip, businessNum, invId, userName, money, sign, status);
        }
        
        public System.Threading.Tasks.Task<int> validateQijiPayWithdrawalAsync(string ip, string businessNum, long invId, string userName, decimal money, string sign, string status) {
            return base.Channel.validateQijiPayWithdrawalAsync(ip, businessNum, invId, userName, money, sign, status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processHelp2PayWithdrawal(W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest request) {
            return base.Channel.processHelp2PayWithdrawal(request);
        }
        
        public int processHelp2PayWithdrawal(long operatorId, long invId, out string errorCode, out string errorMessage) {
            W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest();
            inValue.operatorId = operatorId;
            inValue.invId = invId;
            W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processHelp2PayWithdrawal(inValue);
            errorCode = retVal.errorCode;
            errorMessage = retVal.errorMessage;
            return retVal.processHelp2PayWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalResponse> processHelp2PayWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processHelp2PayWithdrawalRequest request) {
            return base.Channel.processHelp2PayWithdrawalAsync(request);
        }
        
        public int validateHelp2PayWithdrawal(string ip, W88.WebRef.svcPayWithdrawal.Help2PayWithdrawalCallbackResponse help2payResponse) {
            return base.Channel.validateHelp2PayWithdrawal(ip, help2payResponse);
        }
        
        public System.Threading.Tasks.Task<int> validateHelp2PayWithdrawalAsync(string ip, W88.WebRef.svcPayWithdrawal.Help2PayWithdrawalCallbackResponse help2payResponse) {
            return base.Channel.validateHelp2PayWithdrawalAsync(ip, help2payResponse);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalResponse W88.WebRef.svcPayWithdrawal.IWithdrawal.processBaoKimWithdrawal(W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest request) {
            return base.Channel.processBaoKimWithdrawal(request);
        }
        
        public int processBaoKimWithdrawal(long invId, string email, out decimal merchantFee, out string merchantTransId, out string errorCode) {
            W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest inValue = new W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest();
            inValue.invId = invId;
            inValue.email = email;
            W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalResponse retVal = ((W88.WebRef.svcPayWithdrawal.IWithdrawal)(this)).processBaoKimWithdrawal(inValue);
            merchantFee = retVal.merchantFee;
            merchantTransId = retVal.merchantTransId;
            errorCode = retVal.errorCode;
            return retVal.processBaoKimWithdrawalResult;
        }
        
        public System.Threading.Tasks.Task<W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalResponse> processBaoKimWithdrawalAsync(W88.WebRef.svcPayWithdrawal.processBaoKimWithdrawalRequest request) {
            return base.Channel.processBaoKimWithdrawalAsync(request);
        }
        
        public System.Data.DataTable getWithdrawalWireTransaction(long invId) {
            return base.Channel.getWithdrawalWireTransaction(invId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getWithdrawalWireTransactionAsync(long invId) {
            return base.Channel.getWithdrawalWireTransactionAsync(invId);
        }
    }
}
